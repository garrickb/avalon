var _simon_larsson$elm_template$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _simon_larsson$elm_template$Main$setSession = F3(
	function (model, player, lobby) {
		return _elm_lang$core$Native_Utils.update(
			model,
			{
				session: {player: player, lobby: lobby}
			});
	});
var _simon_larsson$elm_template$Main$Model = F4(
	function (a, b, c, d) {
		return {page: a, session: b, socketUrl: c, channels: d};
	});
var _simon_larsson$elm_template$Main$NotFound = {ctor: 'NotFound'};
var _simon_larsson$elm_template$Main$Lobby = function (a) {
	return {ctor: 'Lobby', _0: a};
};
var _simon_larsson$elm_template$Main$About = function (a) {
	return {ctor: 'About', _0: a};
};
var _simon_larsson$elm_template$Main$Home = function (a) {
	return {ctor: 'Home', _0: a};
};
var _simon_larsson$elm_template$Main$setRoute = F2(
	function (route, model) {
		var _p0 = route;
		if (_p0.ctor === 'Nothing') {
			return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		} else {
			switch (_p0._0.ctor) {
				case 'Home':
					var _p1 = model.session.player;
					if (_p1.ctor === 'Just') {
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									page: _simon_larsson$elm_template$Main$Home(
										_simon_larsson$elm_template$Page_Home_Function$initWithName(_p1._0.username))
								}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									page: _simon_larsson$elm_template$Main$Home(_simon_larsson$elm_template$Page_Home_Function$init)
								}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					}
				case 'About':
					return {
						ctor: '_Tuple2',
						_0: _elm_lang$core$Native_Utils.update(
							model,
							{
								page: _simon_larsson$elm_template$Main$About(_simon_larsson$elm_template$Page_About_Function$init)
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				default:
					var _p2 = model.session.player;
					if (_p2.ctor === 'Just') {
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									page: _simon_larsson$elm_template$Main$Lobby(_simon_larsson$elm_template$Page_Lobby_Function$init)
								}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					} else {
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{
									page: _simon_larsson$elm_template$Main$Home(_simon_larsson$elm_template$Page_Home_Function$init)
								}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					}
			}
		}
	});
var _simon_larsson$elm_template$Main$initialPage = _simon_larsson$elm_template$Main$Home(_simon_larsson$elm_template$Page_Home_Function$init);
var _simon_larsson$elm_template$Main$init = F2(
	function (val, location) {
		return A2(
			_simon_larsson$elm_template$Main$setRoute,
			_simon_larsson$elm_template$Route$fromLocation(location),
			{
				page: _simon_larsson$elm_template$Main$initialPage,
				session: _simon_larsson$elm_template$Data_Session$initialSession,
				socketUrl: 'ws://localhost:4000/socket/websocket',
				channels: {ctor: '[]'}
			});
	});
var _simon_larsson$elm_template$Main$SetSession = function (a) {
	return {ctor: 'SetSession', _0: a};
};
var _simon_larsson$elm_template$Main$LobbyMsg = function (a) {
	return {ctor: 'LobbyMsg', _0: a};
};
var _simon_larsson$elm_template$Main$AboutMsg = function (a) {
	return {ctor: 'AboutMsg', _0: a};
};
var _simon_larsson$elm_template$Main$HomeMsg = function (a) {
	return {ctor: 'HomeMsg', _0: a};
};
var _simon_larsson$elm_template$Main$updatePage = F3(
	function (page, msg, model) {
		var toPage = F5(
			function (toModel, toMsg, subUpdate, subMsg, subModel) {
				var _p3 = A2(subUpdate, subMsg, subModel);
				var newModel = _p3._0;
				var newCmd = _p3._1;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{
							page: toModel(newModel)
						}),
					_1: A2(_elm_lang$core$Platform_Cmd$map, toMsg, newCmd)
				};
			});
		var _p4 = {ctor: '_Tuple2', _0: msg, _1: page};
		_v3_5:
		do {
			_v3_4:
			do {
				switch (_p4._0.ctor) {
					case 'SetRoute':
						return A2(_simon_larsson$elm_template$Main$setRoute, _p4._0._0, model);
					case 'HomeMsg':
						switch (_p4._1.ctor) {
							case 'Home':
								var _p5 = A2(_simon_larsson$elm_template$Page_Home_Update$update, _p4._0._0, _p4._1._0);
								var pageModel = _p5._0._0;
								var cmd = _p5._0._1;
								var msgFromPage = _p5._1;
								var newModel = function () {
									var _p6 = msgFromPage;
									if (_p6.ctor === 'NoOp') {
										return model;
									} else {
										return A3(_simon_larsson$elm_template$Main$setSession, model, _p6._0, _p6._1);
									}
								}();
								return A2(
									_simon_larsson$elm_template$Util_ops['=>'],
									_elm_lang$core$Native_Utils.update(
										newModel,
										{
											page: _simon_larsson$elm_template$Main$Home(pageModel)
										}),
									A2(_elm_lang$core$Platform_Cmd$map, _simon_larsson$elm_template$Main$HomeMsg, cmd));
							case 'NotFound':
								break _v3_4;
							default:
								break _v3_5;
						}
					case 'AboutMsg':
						switch (_p4._1.ctor) {
							case 'About':
								return A5(toPage, _simon_larsson$elm_template$Main$About, _simon_larsson$elm_template$Main$AboutMsg, _simon_larsson$elm_template$Page_About_Update$update, _p4._0._0, _p4._1._0);
							case 'NotFound':
								break _v3_4;
							default:
								break _v3_5;
						}
					case 'SetSession':
						return {
							ctor: '_Tuple2',
							_0: _elm_lang$core$Native_Utils.update(
								model,
								{session: _p4._0._0}),
							_1: _elm_lang$core$Platform_Cmd$none
						};
					default:
						if (_p4._1.ctor === 'NotFound') {
							break _v3_4;
						} else {
							break _v3_5;
						}
				}
			} while(false);
			return A2(_simon_larsson$elm_template$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none);
		} while(false);
		return A2(_simon_larsson$elm_template$Util_ops['=>'], model, _elm_lang$core$Platform_Cmd$none);
	});
var _simon_larsson$elm_template$Main$update = F2(
	function (msg, model) {
		return A3(_simon_larsson$elm_template$Main$updatePage, model.page, msg, model);
	});
var _simon_larsson$elm_template$Main$view = function (model) {
	var layout = _simon_larsson$elm_template$Layout_Page$layout;
	var _p7 = model.page;
	switch (_p7.ctor) {
		case 'NotFound':
			return A2(layout, _simon_larsson$elm_template$Layout_Page$Other, _simon_larsson$elm_template$Page_NotFound$view);
		case 'Home':
			return A2(
				_elm_lang$html$Html$map,
				_simon_larsson$elm_template$Main$HomeMsg,
				A2(
					layout,
					_simon_larsson$elm_template$Layout_Page$Home,
					_simon_larsson$elm_template$Page_Home_View$view(_p7._0)));
		case 'About':
			return A2(
				_elm_lang$html$Html$map,
				_simon_larsson$elm_template$Main$AboutMsg,
				A2(
					layout,
					_simon_larsson$elm_template$Layout_Page$About,
					_simon_larsson$elm_template$Page_About_View$view(_p7._0)));
		default:
			return A2(
				_elm_lang$html$Html$map,
				_simon_larsson$elm_template$Main$LobbyMsg,
				A2(
					layout,
					_simon_larsson$elm_template$Layout_Page$Lobby,
					_simon_larsson$elm_template$Page_Lobby_View$view(_p7._0)));
	}
};
var _simon_larsson$elm_template$Main$SetRoute = function (a) {
	return {ctor: 'SetRoute', _0: a};
};
var _simon_larsson$elm_template$Main$main = A2(
	_elm_lang$navigation$Navigation$programWithFlags,
	function (_p8) {
		return _simon_larsson$elm_template$Main$SetRoute(
			_simon_larsson$elm_template$Route$fromLocation(_p8));
	},
	{init: _simon_larsson$elm_template$Main$init, view: _simon_larsson$elm_template$Main$view, update: _simon_larsson$elm_template$Main$update, subscriptions: _simon_larsson$elm_template$Main$subscriptions})(_elm_lang$core$Json_Decode$value);
